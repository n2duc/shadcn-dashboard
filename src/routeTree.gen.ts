/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const UsersLazyImport = createFileRoute('/users')()
const TaskLazyImport = createFileRoute('/task')()
const InventoryLazyImport = createFileRoute('/inventory')()
const CalendarLazyImport = createFileRoute('/calendar')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const UsersLazyRoute = UsersLazyImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/users.lazy').then((d) => d.Route))

const TaskLazyRoute = TaskLazyImport.update({
  id: '/task',
  path: '/task',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/task.lazy').then((d) => d.Route))

const InventoryLazyRoute = InventoryLazyImport.update({
  id: '/inventory',
  path: '/inventory',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/inventory.lazy').then((d) => d.Route))

const CalendarLazyRoute = CalendarLazyImport.update({
  id: '/calendar',
  path: '/calendar',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/calendar.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/calendar': {
      id: '/calendar'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof CalendarLazyImport
      parentRoute: typeof rootRoute
    }
    '/inventory': {
      id: '/inventory'
      path: '/inventory'
      fullPath: '/inventory'
      preLoaderRoute: typeof InventoryLazyImport
      parentRoute: typeof rootRoute
    }
    '/task': {
      id: '/task'
      path: '/task'
      fullPath: '/task'
      preLoaderRoute: typeof TaskLazyImport
      parentRoute: typeof rootRoute
    }
    '/users': {
      id: '/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof UsersLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/calendar': typeof CalendarLazyRoute
  '/inventory': typeof InventoryLazyRoute
  '/task': typeof TaskLazyRoute
  '/users': typeof UsersLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/calendar': typeof CalendarLazyRoute
  '/inventory': typeof InventoryLazyRoute
  '/task': typeof TaskLazyRoute
  '/users': typeof UsersLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/calendar': typeof CalendarLazyRoute
  '/inventory': typeof InventoryLazyRoute
  '/task': typeof TaskLazyRoute
  '/users': typeof UsersLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/calendar' | '/inventory' | '/task' | '/users'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/calendar' | '/inventory' | '/task' | '/users'
  id: '__root__' | '/' | '/calendar' | '/inventory' | '/task' | '/users'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  CalendarLazyRoute: typeof CalendarLazyRoute
  InventoryLazyRoute: typeof InventoryLazyRoute
  TaskLazyRoute: typeof TaskLazyRoute
  UsersLazyRoute: typeof UsersLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  CalendarLazyRoute: CalendarLazyRoute,
  InventoryLazyRoute: InventoryLazyRoute,
  TaskLazyRoute: TaskLazyRoute,
  UsersLazyRoute: UsersLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/calendar",
        "/inventory",
        "/task",
        "/users"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/calendar": {
      "filePath": "calendar.lazy.tsx"
    },
    "/inventory": {
      "filePath": "inventory.lazy.tsx"
    },
    "/task": {
      "filePath": "task.lazy.tsx"
    },
    "/users": {
      "filePath": "users.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
